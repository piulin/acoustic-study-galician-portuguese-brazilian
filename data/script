

writeInfoLine: "Extracting formants..."

thisSound$ = selected$("Sound")
thisTextGrid$ = selected$("TextGrid")

select TextGrid 'thisTextGrid$'
numberOfPhonemes = Get number of intervals: 1
appendInfoLine: "There are ", numberOfPhonemes, " intervals."

select Sound 'thisSound$'
To Formant (burg)... 0 5 5000 0.025 50

select Sound 'thisSound$'
To Pitch... 0.01 60 400

outputPath$ = "/home/pedro/Documentos/CL/experimental_phonetics/project/data/formants.csv"
writeFileLine: "'outputPath$'", "id,phoneme,time,duration,F0,F1,F2,F3,F4,F5"

phoneID=0
for thisInterval from 1 to numberOfPhonemes
   # appendInfoLine: thisInterval

     select TextGrid 'thisTextGrid$'
    thisPhoneme$ = Get label of interval: 1, thisInterval
    appendInfoLine: thisPhoneme$

if not thisPhoneme$ = ""
    phoneID=phoneID+1

    thisPhonemeStartTime = Get start point: 1, thisInterval
    thisPhonemeEndTime   = Get end point:   1, thisInterval

	
step = 0
repeat
    step = step + 0.01

    duration = thisPhonemeEndTime - thisPhonemeStartTime
    midpoint = thisPhonemeStartTime + duration/2

	evalPoint= thisPhonemeStartTime + step
	prev= evalPoint - 0.01
    select Formant 'thisSound$'
    f1 = Get value at time... 1 evalPoint Hertz Linear
    f2 = Get value at time... 2 evalPoint Hertz Linear
    f3 = Get value at time... 3 evalPoint Hertz Linear
    f4 = Get value at time... 4 evalPoint Hertz Linear
    f5 = Get value at time... 5 evalPoint Hertz Linear

select Pitch 'thisSound$'

    f0 = Get mean: prev, evalPoint, "Hertz"

appendFileLine: "'outputPath$'", 
                    ...phoneID, ",", 
                    ...thisPhoneme$, ",",
                    ...evalPoint, ",",
                    ...duration,",",
                    ...f0,",",
                    ...f1, ",", 
                    ...f2, ",", 
                    ...f3, ",", 
                    ...f4, ",", 
                    ...f5

until (thisPhonemeStartTime + step) > thisPhonemeEndTime

endif


endfor

appendInfoLine: "It didn't crash..."